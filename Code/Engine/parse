
--[[

	The parsing function splits the input string into an array, then 
	selects the correct function to call based on the first argument. It passes 
	the remaining arguments (after poping the first one) to the function called.

--]]


--include
dofile(dir.engine .. "help")
dofile(dir.engine .. "actions")

commands = {
["help"] = "Displays this help.",
["look"] = "Displays information about the current room.",
["exit"] = "Exits the game.",
["quit"] = "Alias of exit."
}

--predefined utility functions
local function split(str, c)
	local array = {}
	for w in string.gmatch(str, c) do
		table.insert(array, w)
	end
	return array
end



function parse(input) --TODO: strip initial command word out of these args
	--get the array, & the command
	local args = split(input, "%g+")
	
	local command = table.remove(args, 1)
	
	
	--select the correct function to call
	if command == "help" then return dohelp(args) end
	if command == "exit" then return doexit(args) end
	if command == "quit" then return doexit(args) end
	if command == "look" then return dolook(args) end
	
	if input == "quit" then
		return doexit(input)
	end
	
	--more to come
	
	return PARSE_ERROR
end


--standard generic actions go here

<<<<<<< HEAD
function dohelp(input)
	io.write("Help\n")
	for key,value in pairs(commands)
		do io.write(key .. ": " .. value .. "\n")
	end
	return NORMAL
end

function doexit(input)
=======
function doexit(args)
>>>>>>> b3ba252922d1171803831074b4ad6f697f858853
	io.write("Thanks for playing!\n")
	return QUIT
end

