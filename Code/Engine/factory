--[[

	This is a series of object factories, creating initially
	identical objects. There is almost definitely a better way,
	like creating deep copies of local objects, but I don't know
	how.
	
	TODO: research metatables & metamethods properly
	
	I'm coming at this from a C++ programmer's perspective, so
	a lot of OOP design is here, even if it's not appropriate.

--] ] THIS FILE IS CURRENTLY DISABLED

io.write("Debug: Factory loaded\n")

--create new templates

function newlocation()
	local l = {}
	
	l.name = "location name"
	l.description = "location description"
	
	l.roomlist = {} --the rooms currently loaded
	
	function l.addroom(room)
		table.insert(l.roomlist, room) --name as a position?
	end
	
	return l
end

function newroom()
	local r = {}
	
	r.name = "room name"
	r.description = "room description"
	
	r.doorlist = {} --points to another room
	r.itemlist = {} --items
	
	function r.adddoor(door)
		table.insert(r.doorlist, door.name, door) --use the room name for now
	end
	
	function r.additem(item)
		table.insert(r.itemlist, item)
	end
	
	return r
end

function newitem()
	local i = {}
	
	i.name = "item name"
	i.description = "item description"
	
	return i
end

--]]